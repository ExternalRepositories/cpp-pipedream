(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{47:function(t,a,s){"use strict";s.r(a);var e=s(0),r=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"Generator-related-operations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Generator-related-operations","aria-hidden":"true"}},[t._v("#")]),t._v(" Generator-related operations")]),t._v(" "),s("p",[t._v("Lazy and compositional value processing.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Name")]),t._v(" "),s("th",[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("a",{attrs:{href:"#each"}},[s("tt",[t._v("each")])],1)]),t._v(" "),s("td",[s("code",[t._v("each")]),t._v(" generates values from an input container")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"#collect"}},[s("tt",[t._v("collect")])],1)]),t._v(" "),s("td",[t._v("Collect input values into the container "),s("code",[t._v("T")]),t._v(", e.g., "),s("code",[t._v("collect<std::vector>")]),t._v(".")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"#T-from-T-n-T-by-T1"}},[s("tt",[t._v("from(T n, T by=T{1})")])],1)]),t._v(" "),s("td",[t._v("Generate a numeric sequence starting at "),s("code",[t._v("n")])])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"#T-from-to-T-first-T-limit-T-by-T1"}},[s("tt",[t._v("from_to(T first, T limit, T by=T{1})")])],1)]),t._v(" "),s("td",[t._v("Generate a half-open numeric sequence from "),s("code",[t._v("first")]),t._v(" to before "),s("code",[t._v("limit")]),t._v(".")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"#take-size-t-count"}},[s("tt",[t._v("take(size_t count)")])],1)]),t._v(" "),s("td",[t._v("Generate the first "),s("code",[t._v("n")]),t._v(" values input.")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"#skip-size-t-n"}},[s("tt",[t._v("skip(size_t n)")])],1)]),t._v(" "),s("td",[t._v("Immediately skip the first "),s("code",[t._v("n")]),t._v(" values from input. May empty input.")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"#F-filter-const-F-ampf"}},[s("tt",[t._v("filter(const F &f)")])],1)]),t._v(" "),s("td",[t._v("Generate values from input when "),s("code",[t._v("f(v)")]),t._v(" returns true.")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"#F-T-reduce-F-f-T-initial"}},[s("tt",[t._v("reduce(F f, T initial)")])],1)]),t._v(" "),s("td",[t._v("Reduce/fold input given an initial value.")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"#F-reduce-F-f"}},[s("tt",[t._v("reduce(F f)")])],1)]),t._v(" "),s("td",[t._v("Reduce/fold input. Input is a generator.")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"#Ts-zip-Ts-ampamp-vs"}},[s("tt",[t._v("zip(Ts &&... vs)")])],1)]),t._v(" "),s("td",[t._v("Combine multiple generators' output into a "),s("code",[t._v("std::tuple")]),t._v(".")])])])]),t._v(" "),s("h2",{attrs:{id:"each"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#each","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("each")])]),t._v(" "),s("h3",{attrs:{id:"piped/utilhpp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#piped/utilhpp","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("<piped/util.hpp>")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constexpr")]),t._v(" detail"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("each_ piped"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("each\n")])])]),s("h3",{attrs:{id:"Description"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Description","aria-hidden":"true"}},[t._v("#")]),t._v(" Description")]),t._v(" "),s("p",[s("code",[t._v("each")]),t._v(" generates values from an input container")]),t._v(" "),s("p",[t._v("Example:")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" g "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" each\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" collect"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"T-Ts-collect"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#T-Ts-collect","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("<T,...Ts> collect")])]),t._v(" "),s("h3",{attrs:{id:"piped/utilhpp-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#piped/utilhpp-2","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("<piped/util.hpp>")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" Ts"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constexpr")]),t._v(" detail"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("collect_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Ts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" piped"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("collect\n")])])]),s("h3",{attrs:{id:"Description-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Description-2","aria-hidden":"true"}},[t._v("#")]),t._v(" Description")]),t._v(" "),s("p",[t._v("Collect input values into the container "),s("code",[t._v("T")]),t._v(", e.g., "),s("code",[t._v("collect<std::vector>")]),t._v(".")]),t._v(" "),s("p",[t._v("Element type is determined by input. Use "),s("code",[t._v("map_to")]),t._v(" to convert things along the way. Elements are inserted by "),s("code",[t._v("emplace_back()")]),t._v(" by default.")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" v  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from_to")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" collect"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// std::vector<int>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" v1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" from_to"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("size_t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" collect"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// std::vector<size_t>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" v2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from_to")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" collect"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// std::vector<float>")]),t._v("\n")])])]),s("p",[t._v("There is explicit support for building "),s("code",[t._v("std::map")]),t._v(" if the input is a "),s("code",[t._v("std::tuple")]),t._v(" of at least 2 values; the first will be the key, the second the value. Elements are inserted by "),s("code",[t._v("try_emplace()")]),t._v(". See "),s("code",[t._v("zip")]),t._v(" for an example.")]),t._v(" "),s("h2",{attrs:{id:"T-from-T-n-T-by-T1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#T-from-T-n-T-by-T1","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("<T> from(T n, T by=T{1})")])]),t._v(" "),s("h3",{attrs:{id:"piped/utilhpp-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#piped/utilhpp-3","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("<piped/util.hpp>")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\ndetail"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("generator_seq"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" piped"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" T by"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"Description-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Description-3","aria-hidden":"true"}},[t._v("#")]),t._v(" Description")]),t._v(" "),s("p",[t._v("Generate a numeric sequence starting at "),s("code",[t._v("n")])]),t._v(" "),s("p",[s("code",[t._v("T")]),t._v(" can represent.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Parameter")]),t._v(" "),s("th"),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("n")])]),t._v(" "),s("td",[s("code",[t._v("T")])]),t._v(" "),s("td",[t._v("Starting value")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("by")])]),t._v(" "),s("td",[s("code",[t._v("T")])]),t._v(" "),s("td",[t._v("Increment, defaults to "),s("code",[t._v("T{1}")])])])])]),t._v(" "),s("h2",{attrs:{id:"T-from-to-T-first-T-limit-T-by-T1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#T-from-to-T-first-T-limit-T-by-T1","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("<T> from_to(T first, T limit, T by=T{1})")])]),t._v(" "),s("h3",{attrs:{id:"piped/utilhpp-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#piped/utilhpp-4","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("<piped/util.hpp>")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\ndetail"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("generator_seq"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" piped"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from_to")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T first"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" T limit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" T by"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"Description-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Description-4","aria-hidden":"true"}},[t._v("#")]),t._v(" Description")]),t._v(" "),s("p",[t._v("Generate a half-open numeric sequence from "),s("code",[t._v("first")]),t._v(" to before "),s("code",[t._v("limit")]),t._v(".")]),t._v(" "),s("p",[t._v("Values proceed from "),s("code",[t._v("first")]),t._v(" to "),s("code",[t._v("limit")]),t._v(", incremented by "),s("code",[t._v("by")]),t._v(". "),s("code",[t._v("limit")]),t._v(" does not have to be a value in the sequence. "),s("code",[t._v("incr")]),t._v(" may be negative.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Parameter")]),t._v(" "),s("th"),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("first")])]),t._v(" "),s("td",[s("code",[t._v("T")])]),t._v(" "),s("td",[t._v("Starting value")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("limit")])]),t._v(" "),s("td",[s("code",[t._v("T")])]),t._v(" "),s("td",[t._v("Output will stop before this")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("by")])]),t._v(" "),s("td",[s("code",[t._v("T")])]),t._v(" "),s("td",[t._v("Increment, defaults to "),s("code",[t._v("T{1}")])])])])]),t._v(" "),s("h2",{attrs:{id:"take-size-t-count"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#take-size-t-count","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("take(size_t count)")])]),t._v(" "),s("h3",{attrs:{id:"piped/utilhpp-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#piped/utilhpp-5","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("<piped/util.hpp>")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("detail"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("take_ piped"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("take")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size_t count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"Description-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Description-5","aria-hidden":"true"}},[t._v("#")]),t._v(" Description")]),t._v(" "),s("p",[t._v("Generate the first "),s("code",[t._v("n")]),t._v(" values input.")]),t._v(" "),s("p",[t._v("Example:")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("take")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" collect"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => [5,6,7]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Normally just use from_to() here, though.")]),t._v("\n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("Parameter")]),t._v(" "),s("th"),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("count")])]),t._v(" "),s("td",[s("code",[t._v("size_t")])]),t._v(" "),s("td")])])]),t._v(" "),s("h2",{attrs:{id:"skip-size-t-n"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#skip-size-t-n","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("skip(size_t n)")])]),t._v(" "),s("h3",{attrs:{id:"piped/utilhpp-6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#piped/utilhpp-6","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("<piped/util.hpp>")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("detail"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("skip_ piped"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("skip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size_t n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"Description-6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Description-6","aria-hidden":"true"}},[t._v("#")]),t._v(" Description")]),t._v(" "),s("p",[t._v("Immediately skip the first "),s("code",[t._v("n")]),t._v(" values from input. May empty input.")]),t._v(" "),s("p",[t._v("Example:")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from_to")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("skip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" collect"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => [6,7,8,9]")]),t._v("\n")])])]),s("p",[t._v("Note, values are skipped immediately because it would otherwise be impossible to tell the correct value of "),s("code",[t._v("empty()")]),t._v(". It is required that if "),s("code",[t._v("empty()")]),t._v(" returns false, "),s("code",[t._v("next()")]),t._v(" return a non-empty value.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Parameter")]),t._v(" "),s("th"),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("n")])]),t._v(" "),s("td",[s("code",[t._v("size_t")])]),t._v(" "),s("td")])])]),t._v(" "),s("h2",{attrs:{id:"F-filter-const-F-ampf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#F-filter-const-F-ampf","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("<F> filter(const F &f)")])]),t._v(" "),s("h3",{attrs:{id:"piped/utilhpp-7"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#piped/utilhpp-7","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("<piped/util.hpp>")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" F"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\ndetail"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("filter_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("F"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" piped"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" F "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"Description-7"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Description-7","aria-hidden":"true"}},[t._v("#")]),t._v(" Description")]),t._v(" "),s("p",[t._v("Generate values from input when "),s("code",[t._v("f(v)")]),t._v(" returns true.")]),t._v(" "),s("p",[t._v("If "),s("code",[t._v("f(v)")]),t._v(" returns false, values will be generated repeatedly until input is exhausted or true is returned.")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from_to")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" collect"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => [1,3,5,7,9]")]),t._v("\n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("Parameter")]),t._v(" "),s("th"),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("f")])]),t._v(" "),s("td",[s("code",[t._v("const F &")])]),t._v(" "),s("td")])])]),t._v(" "),s("h2",{attrs:{id:"F-T-reduce-F-f-T-initial"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#F-T-reduce-F-f-T-initial","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("<F,T> reduce(F f, T initial)")])]),t._v(" "),s("h3",{attrs:{id:"piped/utilhpp-8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#piped/utilhpp-8","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("<piped/util.hpp>")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" F undefined"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" T undefined"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\ndetail"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("reduce_init_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("F"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" piped"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("F f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" T initial"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"Description-8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Description-8","aria-hidden":"true"}},[t._v("#")]),t._v(" Description")]),t._v(" "),s("p",[t._v("Reduce/fold input given an initial value.")]),t._v(" "),s("p",[t._v("Example:")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from_to")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" collect"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" each "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("plus"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -> 46")]),t._v("\n")])])]),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("Returns")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("The result of repeatedly calling "),s("code",[t._v("r = f(r,v)")]),t._v(", or "),s("code",[t._v("r")]),t._v(", where "),s("code",[t._v("r")]),t._v(" is the initial value.")])])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Parameter")]),t._v(" "),s("th"),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("f")])]),t._v(" "),s("td",[s("code",[t._v("F")])]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("code",[t._v("initial")])]),t._v(" "),s("td",[s("code",[t._v("T")])]),t._v(" "),s("td")])])]),t._v(" "),s("h2",{attrs:{id:"F-reduce-F-f"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#F-reduce-F-f","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("<F> reduce(F f)")])]),t._v(" "),s("h3",{attrs:{id:"piped/utilhpp-9"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#piped/utilhpp-9","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("<piped/util.hpp>")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" F"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\ndetail"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("reduce_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("F"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" piped"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("F f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"Description-9"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Description-9","aria-hidden":"true"}},[t._v("#")]),t._v(" Description")]),t._v(" "),s("p",[t._v("Reduce/fold input. Input is a generator.")]),t._v(" "),s("p",[t._v("Example:")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from_to")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" collect"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" each "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("plus"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -> 45")]),t._v("\n")])])]),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("Returns")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("The result of repeatedly calling "),s("code",[t._v("r = f(r,v)")]),t._v(", or "),s("code",[t._v("r")]),t._v(", where "),s("code",[t._v("r")]),t._v(" is a default-initialized value.")])])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Parameter")]),t._v(" "),s("th"),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("f")])]),t._v(" "),s("td",[s("code",[t._v("F")])]),t._v(" "),s("td")])])]),t._v(" "),s("h2",{attrs:{id:"Ts-zip-Ts-ampamp-vs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Ts-zip-Ts-ampamp-vs","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("<...Ts> zip(Ts &&... vs)")])]),t._v(" "),s("h3",{attrs:{id:"piped/ziphpp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#piped/ziphpp","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("<piped/zip.hpp>")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" Ts"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" piped"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("zip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Ts "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" vs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"Description-10"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Description-10","aria-hidden":"true"}},[t._v("#")]),t._v(" Description")]),t._v(" "),s("p",[t._v("Combine multiple generators' output into a "),s("code",[t._v("std::tuple")]),t._v(".")]),t._v(" "),s("p",[s("code",[t._v("std::tuple")]),t._v(" based on the "),s("code",[t._v("value_type")]),t._v(" of each specified generator. It will be empty when "),s("em",[t._v("any")]),t._v(" of the generators are empty.")]),t._v(" "),s("p",[t._v("Example:")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("zip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a,b,c"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" collect"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("map"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Produces {{"a",1}, {"b",2}, {"c",3}}')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Note however this is a map<string_view, int>")]),t._v("\n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("Parameter")]),t._v(" "),s("th"),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("vs")])]),t._v(" "),s("td",[s("code",[t._v("Ts &&...")])]),t._v(" "),s("td",[t._v("A series of generators.")])])])])])},[],!1,null,null,null);a.default=r.exports}}]);