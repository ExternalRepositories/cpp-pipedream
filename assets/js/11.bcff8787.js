(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{46:function(t,e,_){"use strict";_.r(e);var r=_(0),a=Object(r.a)({},function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"Developer-Utility"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#Developer-Utility","aria-hidden":"true"}},[t._v("#")]),t._v(" Developer Utility")]),t._v(" "),_("p",[t._v("Writing your own operations.")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("Class")]),t._v(" "),_("th",[t._v("Description")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[_("a",{attrs:{href:"structpiped_1_1adl__piped__out"}},[_("tt",[t._v("piped::adl_piped_out")])],1)]),t._v(" "),_("td",[t._v("The O-behavior of "),_("code",[t._v("I | O")]),t._v(". By default, "),_("code",[t._v("o.process(i)")]),t._v(", or "),_("code",[t._v("o(i)")]),t._v(".")])]),t._v(" "),_("tr",[_("td",[_("a",{attrs:{href:"structpiped_1_1adl__piped"}},[_("tt",[t._v("piped::adl_piped")])],1)]),t._v(" "),_("td",[t._v("The I-behavior of "),_("code",[t._v("I | O")]),t._v(". By default, "),_("code",[t._v("adl_piped_out::process()")]),t._v(".")])]),t._v(" "),_("tr",[_("td",[_("a",{attrs:{href:"structpiped_1_1adl__piped__assign"}},[_("tt",[t._v("piped::adl_piped_assign")])],1)]),t._v(" "),_("td",[t._v("The behavior of "),_("code",[t._v("A |= C")]),t._v(". By default, "),_("code",[t._v("a = a.process(c)")]),t._v(".")])]),t._v(" "),_("tr",[_("td",[_("a",{attrs:{href:"structpiped_1_1simple__operation"}},[_("tt",[t._v("piped::simple_operation")])],1)]),t._v(" "),_("td",[t._v("A simple way to implement an operation by specifying a function for "),_("code",[t._v("process()")])])]),t._v(" "),_("tr",[_("td",[_("a",{attrs:{href:"structpiped_1_1generator"}},[_("tt",[t._v("piped::generator")])],1)]),t._v(" "),_("td",[t._v("Generator should be a base class for user-built generators. It provides methods to implicitly use the generator as a C++-style container with "),_("code",[t._v("begin()")]),t._v("/"),_("code",[t._v("end()")]),t._v(".")])]),t._v(" "),_("tr",[_("td",[_("a",{attrs:{href:"structpiped_1_1generator__from__iterator"}},[_("tt",[t._v("piped::generator_from_iterator")])],1)]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[_("a",{attrs:{href:"structpiped_1_1adl__map__to"}},[_("tt",[t._v("piped::adl_map_to")])],1)]),t._v(" "),_("td",[t._v("This is used to customize type conversion.")])]),t._v(" "),_("tr",[_("td",[_("a",{attrs:{href:"classpiped_1_1extra_1_1ptr"}},[_("tt",[t._v("piped::extra::ptr")])],1)]),t._v(" "),_("td",[t._v("A transparent pointer wrapper. This functions as an "),_("code",[t._v("option_type")]),t._v(", i.e. implements unary "),_("code",[t._v("*")]),t._v(", and is bool-convertible.")])])])])])},[],!1,null,null,null);e.default=a.exports}}]);