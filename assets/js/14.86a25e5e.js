(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{51:function(t,s,a){"use strict";a.r(s);var e=a(0),r=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"String-manipulations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#String-manipulations","aria-hidden":"true"}},[t._v("#")]),t._v(" String manipulations")]),t._v(" "),a("p",[t._v("Operations for strings.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Name")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("a",{attrs:{href:"#join"}},[a("tt",[t._v("join")])],1)]),t._v(" "),a("td",[t._v("Join generated string-like objects into a string, with each element separated by "),a("code",[t._v("joiner")]),t._v(". The "),a("code",[t._v("joiner")]),t._v(" defaults to the empty string.")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"#split-std-string-view-split-string"}},[a("tt",[t._v("split(std::string_view split_string)")])],1)]),t._v(" "),a("td",[t._v("Split input based on a "),a("code",[t._v("split_string")]),t._v(", generating a "),a("code",[t._v("std::string_view")]),t._v(" for each substring. Note a std::regex variant is available.")])])])]),t._v(" "),a("h2",{attrs:{id:"join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#join","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("code",[t._v("join")])]),t._v(" "),a("h3",{attrs:{id:"piped/stringhpp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#piped/stringhpp","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("code",[t._v("<piped/string.hpp>")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constexpr")]),t._v(" join_ piped"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("join\n")])])]),a("h3",{attrs:{id:"Description"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#Description","aria-hidden":"true"}},[t._v("#")]),t._v(" Description")]),t._v(" "),a("p",[t._v("Join generated string-like objects into a string, with each element separated by "),a("code",[t._v("joiner")]),t._v(". The "),a("code",[t._v("joiner")]),t._v(" defaults to the empty string.")]),t._v(" "),a("p",[t._v("Optionally: "),a("code",[t._v("join(std::string_view joiner)")])]),t._v(" "),a("p",[t._v("Example:")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a,b,c"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ns "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a:b:c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n")])])]),a("h2",{attrs:{id:"split-std-string-view-split-string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#split-std-string-view-split-string","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("code",[t._v("split(std::string_view split_string)")])]),t._v(" "),a("h3",{attrs:{id:"piped/stringhpp-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#piped/stringhpp-2","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("code",[t._v("<piped/string.hpp>")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" piped"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string_view split_string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"Description-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#Description-2","aria-hidden":"true"}},[t._v("#")]),t._v(" Description")]),t._v(" "),a("p",[t._v("Split input based on a "),a("code",[t._v("split_string")]),t._v(", generating a "),a("code",[t._v("std::string_view")]),t._v(" for each substring. Note a std::regex variant is available.")]),t._v(" "),a("p",[t._v("Example:")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" v "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a,b,c"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" collect"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vector"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Produces ["a","b","c"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v is a std::vector<std::string_view>")]),t._v("\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("Parameter")]),t._v(" "),a("th"),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("split_string")])]),t._v(" "),a("td",[a("code",[t._v("std::string_view")])]),t._v(" "),a("td")])])])])},[],!1,null,null,null);s.default=r.exports}}]);