(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{50:function(t,a,s){"use strict";s.r(a);var e=s(0),r=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"Matching-types"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Matching-types","aria-hidden":"true"}},[t._v("#")]),t._v(" Matching types")]),t._v(" "),s("p",[t._v("Easily match values by type.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Name")]),t._v(" "),s("th",[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("a",{attrs:{href:"#match"}},[s("tt",[t._v("match")])],1)]),t._v(" "),s("td",[t._v("Match by type.")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"#match-else"}},[s("tt",[t._v("match_else")])],1)]),t._v(" "),s("td",[t._v("Match anything.")])])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Class")]),t._v(" "),s("th",[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("a",{attrs:{href:"structpiped_1_1adl__match"}},[s("tt",[t._v("piped::adl_match")])],1)]),t._v(" "),s("td",[t._v("Behavior for matching "),s("code",[t._v("M")]),t._v(" on a type "),s("code",[t._v("T")]),t._v(" for "),s("code",[t._v("match<M>")])])])])]),t._v(" "),s("h2",{attrs:{id:"T-match"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#T-match","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("<T> match")])]),t._v(" "),s("h3",{attrs:{id:"piped/matchhpp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#piped/matchhpp","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("<piped/match.hpp>")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constexpr")]),t._v(" detail"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("match_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" piped"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("match\n")])])]),s("h3",{attrs:{id:"Description"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Description","aria-hidden":"true"}},[t._v("#")]),t._v(" Description")]),t._v(" "),s("p",[t._v("Match by type.")]),t._v(" "),s("p",[t._v("Example:")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    v\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" match"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("say")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"F int"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" match"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("say")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"F float"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" match_else   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("say")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"None of the above!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("This provides a pipe-based visitor syntax for matching values on type. The function provided to the first encountered match will be called; further matches will be skipped. "),s("code",[t._v("match_else")]),t._v(" can be used to match any other case.")]),t._v(" "),s("p",[t._v("One can customize how type matching is done by specializing "),s("code",[t._v("adl_match")]),t._v(".")]),t._v(" "),s("p",[s("code",[t._v("operator<=")]),t._v(" is "),s("s",[t._v("abused")]),t._v(" overloaded to provide slightly nicer syntax. One can also call using "),s("code",[t._v("match<T>([](...){ })")]),t._v(".")]),t._v(" "),s("p",[s("code",[t._v("match_else")])]),t._v(" "),s("h2",{attrs:{id:"match-else"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#match-else","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("match_else")])]),t._v(" "),s("h3",{attrs:{id:"piped/matchhpp-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#piped/matchhpp-2","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("<piped/match.hpp>")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constexpr")]),t._v(" detail"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("match_else_ piped"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("match_else\n")])])]),s("h3",{attrs:{id:"Description-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Description-2","aria-hidden":"true"}},[t._v("#")]),t._v(" Description")]),t._v(" "),s("p",[t._v("Match anything.")]),t._v(" "),s("p",[s("code",[t._v("match")])])])},[],!1,null,null,null);a.default=r.exports}}]);